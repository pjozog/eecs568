/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

package perllcm;
 
import java.io.*;
import java.nio.*;
import java.util.*;
import lcm.lcm.*;
 
public final class auv_os_conduit_t implements lcm.lcm.LCMEncodable
{
    public long utime;
    public perllcm.auv_os_conduit_raw_t dvl;
    public perllcm.auv_os_conduit_raw_t altimeter;
    public perllcm.auv_os_conduit_raw_t gps;
    public perllcm.auv_os_conduit_raw_t compass;
    public perllcm.auv_os_conduit_raw_t ojw;
    public perllcm.auv_os_conduit_raw_t omload;
    public perllcm.auv_os_conduit_raw_t omp;
    public perllcm.auv_os_conduit_raw_t omstart;
    public perllcm.auv_os_conduit_raw_t omstop;
    public perllcm.auv_os_conduit_raw_t osd;
 
    public auv_os_conduit_t()
    {
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0x09005cb00d8d6afaL;
 
    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class>());
    }
 
    public static long _hashRecursive(ArrayList<Class> classes)
    {
        if (classes.contains(perllcm.auv_os_conduit_t.class))
            return 0L;
 
        classes.add(perllcm.auv_os_conduit_t.class);
        long hash = LCM_FINGERPRINT_BASE
             + perllcm.auv_os_conduit_raw_t._hashRecursive(classes)
             + perllcm.auv_os_conduit_raw_t._hashRecursive(classes)
             + perllcm.auv_os_conduit_raw_t._hashRecursive(classes)
             + perllcm.auv_os_conduit_raw_t._hashRecursive(classes)
             + perllcm.auv_os_conduit_raw_t._hashRecursive(classes)
             + perllcm.auv_os_conduit_raw_t._hashRecursive(classes)
             + perllcm.auv_os_conduit_raw_t._hashRecursive(classes)
             + perllcm.auv_os_conduit_raw_t._hashRecursive(classes)
             + perllcm.auv_os_conduit_raw_t._hashRecursive(classes)
             + perllcm.auv_os_conduit_raw_t._hashRecursive(classes)
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        outs.writeLong(this.utime); 
 
        this.dvl._encodeRecursive(outs); 
 
        this.altimeter._encodeRecursive(outs); 
 
        this.gps._encodeRecursive(outs); 
 
        this.compass._encodeRecursive(outs); 
 
        this.ojw._encodeRecursive(outs); 
 
        this.omload._encodeRecursive(outs); 
 
        this.omp._encodeRecursive(outs); 
 
        this.omstart._encodeRecursive(outs); 
 
        this.omstop._encodeRecursive(outs); 
 
        this.osd._encodeRecursive(outs); 
 
    }
 
    public auv_os_conduit_t(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public auv_os_conduit_t(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static perllcm.auv_os_conduit_t _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        perllcm.auv_os_conduit_t o = new perllcm.auv_os_conduit_t();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        this.utime = ins.readLong();
 
        this.dvl = perllcm.auv_os_conduit_raw_t._decodeRecursiveFactory(ins);
 
        this.altimeter = perllcm.auv_os_conduit_raw_t._decodeRecursiveFactory(ins);
 
        this.gps = perllcm.auv_os_conduit_raw_t._decodeRecursiveFactory(ins);
 
        this.compass = perllcm.auv_os_conduit_raw_t._decodeRecursiveFactory(ins);
 
        this.ojw = perllcm.auv_os_conduit_raw_t._decodeRecursiveFactory(ins);
 
        this.omload = perllcm.auv_os_conduit_raw_t._decodeRecursiveFactory(ins);
 
        this.omp = perllcm.auv_os_conduit_raw_t._decodeRecursiveFactory(ins);
 
        this.omstart = perllcm.auv_os_conduit_raw_t._decodeRecursiveFactory(ins);
 
        this.omstop = perllcm.auv_os_conduit_raw_t._decodeRecursiveFactory(ins);
 
        this.osd = perllcm.auv_os_conduit_raw_t._decodeRecursiveFactory(ins);
 
    }
 
    public perllcm.auv_os_conduit_t copy()
    {
        perllcm.auv_os_conduit_t outobj = new perllcm.auv_os_conduit_t();
        outobj.utime = this.utime;
 
        outobj.dvl = this.dvl.copy();
 
        outobj.altimeter = this.altimeter.copy();
 
        outobj.gps = this.gps.copy();
 
        outobj.compass = this.compass.copy();
 
        outobj.ojw = this.ojw.copy();
 
        outobj.omload = this.omload.copy();
 
        outobj.omp = this.omp.copy();
 
        outobj.omstart = this.omstart.copy();
 
        outobj.omstop = this.omstop.copy();
 
        outobj.osd = this.osd.copy();
 
        return outobj;
    }
 
}

