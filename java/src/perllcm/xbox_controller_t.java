/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

package perllcm;
 
import java.io.*;
import java.nio.*;
import java.util.*;
import lcm.lcm.*;
 
public final class xbox_controller_t implements lcm.lcm.LCMEncodable
{
    public long utime;
    public int l_stick_x;
    public int l_stick_y;
    public boolean l_stick_btn;
    public int r_stick_x;
    public int r_stick_y;
    public boolean r_stick_btn;
    public int l_trig;
    public int r_trig;
    public boolean l_bump;
    public boolean r_bump;
    public boolean xbox_btn;
    public boolean back_btn;
    public boolean start_btn;
    public boolean a_btn;
    public boolean b_btn;
    public boolean x_btn;
    public boolean y_btn;
    public boolean dpad_u;
    public boolean dpad_d;
    public boolean dpad_l;
    public boolean dpad_r;
 
    public xbox_controller_t()
    {
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0x974649c312043026L;
 
    public static final int AXIS_MAX = 32767;
    public static final int AXIS_MIN = -32767;
    public static final int STICK_NEUTRAL = 0;
    public static final int TRIG_NEUTRAL = -32767;

    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class>());
    }
 
    public static long _hashRecursive(ArrayList<Class> classes)
    {
        if (classes.contains(perllcm.xbox_controller_t.class))
            return 0L;
 
        classes.add(perllcm.xbox_controller_t.class);
        long hash = LCM_FINGERPRINT_BASE
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        outs.writeLong(this.utime); 
 
        outs.writeInt(this.l_stick_x); 
 
        outs.writeInt(this.l_stick_y); 
 
        outs.writeByte( this.l_stick_btn ? 1 : 0); 
 
        outs.writeInt(this.r_stick_x); 
 
        outs.writeInt(this.r_stick_y); 
 
        outs.writeByte( this.r_stick_btn ? 1 : 0); 
 
        outs.writeInt(this.l_trig); 
 
        outs.writeInt(this.r_trig); 
 
        outs.writeByte( this.l_bump ? 1 : 0); 
 
        outs.writeByte( this.r_bump ? 1 : 0); 
 
        outs.writeByte( this.xbox_btn ? 1 : 0); 
 
        outs.writeByte( this.back_btn ? 1 : 0); 
 
        outs.writeByte( this.start_btn ? 1 : 0); 
 
        outs.writeByte( this.a_btn ? 1 : 0); 
 
        outs.writeByte( this.b_btn ? 1 : 0); 
 
        outs.writeByte( this.x_btn ? 1 : 0); 
 
        outs.writeByte( this.y_btn ? 1 : 0); 
 
        outs.writeByte( this.dpad_u ? 1 : 0); 
 
        outs.writeByte( this.dpad_d ? 1 : 0); 
 
        outs.writeByte( this.dpad_l ? 1 : 0); 
 
        outs.writeByte( this.dpad_r ? 1 : 0); 
 
    }
 
    public xbox_controller_t(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public xbox_controller_t(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static perllcm.xbox_controller_t _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        perllcm.xbox_controller_t o = new perllcm.xbox_controller_t();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        this.utime = ins.readLong();
 
        this.l_stick_x = ins.readInt();
 
        this.l_stick_y = ins.readInt();
 
        this.l_stick_btn = ins.readByte()!=0;
 
        this.r_stick_x = ins.readInt();
 
        this.r_stick_y = ins.readInt();
 
        this.r_stick_btn = ins.readByte()!=0;
 
        this.l_trig = ins.readInt();
 
        this.r_trig = ins.readInt();
 
        this.l_bump = ins.readByte()!=0;
 
        this.r_bump = ins.readByte()!=0;
 
        this.xbox_btn = ins.readByte()!=0;
 
        this.back_btn = ins.readByte()!=0;
 
        this.start_btn = ins.readByte()!=0;
 
        this.a_btn = ins.readByte()!=0;
 
        this.b_btn = ins.readByte()!=0;
 
        this.x_btn = ins.readByte()!=0;
 
        this.y_btn = ins.readByte()!=0;
 
        this.dpad_u = ins.readByte()!=0;
 
        this.dpad_d = ins.readByte()!=0;
 
        this.dpad_l = ins.readByte()!=0;
 
        this.dpad_r = ins.readByte()!=0;
 
    }
 
    public perllcm.xbox_controller_t copy()
    {
        perllcm.xbox_controller_t outobj = new perllcm.xbox_controller_t();
        outobj.utime = this.utime;
 
        outobj.l_stick_x = this.l_stick_x;
 
        outobj.l_stick_y = this.l_stick_y;
 
        outobj.l_stick_btn = this.l_stick_btn;
 
        outobj.r_stick_x = this.r_stick_x;
 
        outobj.r_stick_y = this.r_stick_y;
 
        outobj.r_stick_btn = this.r_stick_btn;
 
        outobj.l_trig = this.l_trig;
 
        outobj.r_trig = this.r_trig;
 
        outobj.l_bump = this.l_bump;
 
        outobj.r_bump = this.r_bump;
 
        outobj.xbox_btn = this.xbox_btn;
 
        outobj.back_btn = this.back_btn;
 
        outobj.start_btn = this.start_btn;
 
        outobj.a_btn = this.a_btn;
 
        outobj.b_btn = this.b_btn;
 
        outobj.x_btn = this.x_btn;
 
        outobj.y_btn = this.y_btn;
 
        outobj.dpad_u = this.dpad_u;
 
        outobj.dpad_d = this.dpad_d;
 
        outobj.dpad_l = this.dpad_l;
 
        outobj.dpad_r = this.dpad_r;
 
        return outobj;
    }
 
}

