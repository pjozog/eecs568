/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

package perllcm;
 
import java.io.*;
import java.nio.*;
import java.util.*;
import lcm.lcm.*;
 
public final class relative_pose_link_t implements lcm.lcm.LCMEncodable
{
    public int idx0;
    public int idx1;
    public perllcm.pose3d_t pose;
 
    public relative_pose_link_t()
    {
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0xc3cd47cab28e44c9L;
 
    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class>());
    }
 
    public static long _hashRecursive(ArrayList<Class> classes)
    {
        if (classes.contains(perllcm.relative_pose_link_t.class))
            return 0L;
 
        classes.add(perllcm.relative_pose_link_t.class);
        long hash = LCM_FINGERPRINT_BASE
             + perllcm.pose3d_t._hashRecursive(classes)
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        outs.writeInt(this.idx0); 
 
        outs.writeInt(this.idx1); 
 
        this.pose._encodeRecursive(outs); 
 
    }
 
    public relative_pose_link_t(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public relative_pose_link_t(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static perllcm.relative_pose_link_t _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        perllcm.relative_pose_link_t o = new perllcm.relative_pose_link_t();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        this.idx0 = ins.readInt();
 
        this.idx1 = ins.readInt();
 
        this.pose = perllcm.pose3d_t._decodeRecursiveFactory(ins);
 
    }
 
    public perllcm.relative_pose_link_t copy()
    {
        perllcm.relative_pose_link_t outobj = new perllcm.relative_pose_link_t();
        outobj.idx0 = this.idx0;
 
        outobj.idx1 = this.idx1;
 
        outobj.pose = this.pose.copy();
 
        return outobj;
    }
 
}

