/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

package mrlcm;
 
import java.io.*;
import java.nio.*;
import java.util.*;
import lcm.lcm.*;
 
public final class carmen3d_robot_laser_t implements lcm.lcm.LCMEncodable
{
    public long utime;
    public bot_core.planar_lidar_t laser;
    public bot_core.pose_t pose;
    public mrlcm.carmen3d_point_cov_t cov;
 
    public carmen3d_robot_laser_t()
    {
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0xb23817dbffe7475bL;
 
    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class>());
    }
 
    public static long _hashRecursive(ArrayList<Class> classes)
    {
        if (classes.contains(mrlcm.carmen3d_robot_laser_t.class))
            return 0L;
 
        classes.add(mrlcm.carmen3d_robot_laser_t.class);
        long hash = LCM_FINGERPRINT_BASE
             + bot_core.planar_lidar_t._hashRecursive(classes)
             + bot_core.pose_t._hashRecursive(classes)
             + mrlcm.carmen3d_point_cov_t._hashRecursive(classes)
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        outs.writeLong(this.utime); 
 
        this.laser._encodeRecursive(outs); 
 
        this.pose._encodeRecursive(outs); 
 
        this.cov._encodeRecursive(outs); 
 
    }
 
    public carmen3d_robot_laser_t(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public carmen3d_robot_laser_t(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static mrlcm.carmen3d_robot_laser_t _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        mrlcm.carmen3d_robot_laser_t o = new mrlcm.carmen3d_robot_laser_t();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        this.utime = ins.readLong();
 
        this.laser = bot_core.planar_lidar_t._decodeRecursiveFactory(ins);
 
        this.pose = bot_core.pose_t._decodeRecursiveFactory(ins);
 
        this.cov = mrlcm.carmen3d_point_cov_t._decodeRecursiveFactory(ins);
 
    }
 
    public mrlcm.carmen3d_robot_laser_t copy()
    {
        mrlcm.carmen3d_robot_laser_t outobj = new mrlcm.carmen3d_robot_laser_t();
        outobj.utime = this.utime;
 
        outobj.laser = this.laser.copy();
 
        outobj.pose = this.pose.copy();
 
        outobj.cov = this.cov.copy();
 
        return outobj;
    }
 
}

